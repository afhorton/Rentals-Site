// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalsData;

namespace RentalsData.Migrations
{
    [DbContext(typeof(RentalsContext))]
    partial class RentalsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentalsData.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Owner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ben King",
                            Phone = "403-555-8500"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paul Wilson",
                            Phone = "403-555-6935"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kimberly Dunne",
                            Phone = "403-555-4770"
                        });
                });

            modelBuilder.Entity("RentalsData.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PropertyType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Style = "Apartment"
                        },
                        new
                        {
                            Id = 2,
                            Style = "Townhouse"
                        },
                        new
                        {
                            Id = 3,
                            Style = "Bungalow"
                        },
                        new
                        {
                            Id = 4,
                            Style = "Suite"
                        });
                });

            modelBuilder.Entity("RentalsData.RentalProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RenterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PropertyTypeId");

                    b.HasIndex("RenterId")
                        .IsUnique()
                        .HasFilter("[RenterId] IS NOT NULL");

                    b.ToTable("RentalProperty");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1345 - 670 14th Ave SW",
                            City = "Calgary",
                            OwnerId = 2,
                            PostalCode = "T3T 3T3",
                            PropertyTypeId = 1,
                            Province = "AB",
                            Rent = 1200m,
                            RenterId = 3
                        },
                        new
                        {
                            Id = 2,
                            Address = "4567 66th Ave NW",
                            City = "Calgary",
                            OwnerId = 1,
                            PostalCode = "T2T 2D2",
                            PropertyTypeId = 3,
                            Province = "AB",
                            Rent = 2400m,
                            RenterId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "240 - 2111 4th St NW",
                            City = "Calgary",
                            OwnerId = 3,
                            PostalCode = "T5T 5T5",
                            PropertyTypeId = 4,
                            Province = "AB",
                            Rent = 1000m
                        });
                });

            modelBuilder.Entity("RentalsData.Renter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Renter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Sam",
                            LastName = "Munro",
                            Phone = "403-555-3456"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Sarah",
                            LastName = "Carr",
                            Phone = "403-555-7666"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "John",
                            LastName = "Hudon",
                            Phone = "403-555-3000"
                        });
                });

            modelBuilder.Entity("RentalsData.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OwnerID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "John Doe",
                            Password = "password",
                            Role = "Manager",
                            Username = "jdoe"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Karen Hunter",
                            Password = "password",
                            Role = "Staff",
                            Username = "khunnter"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Ben King",
                            OwnerID = 1,
                            Password = "password",
                            Role = "Owner",
                            Username = "bking"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Paul wilson",
                            OwnerID = 2,
                            Password = "password",
                            Role = "Owner",
                            Username = "pwilson"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Kimberly Dunne",
                            OwnerID = 3,
                            Password = "password",
                            Role = "Owner",
                            Username = "kdunne"
                        });
                });

            modelBuilder.Entity("RentalsData.RentalProperty", b =>
                {
                    b.HasOne("RentalsData.Owner", "Owner")
                        .WithMany("RentalProperties")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalsData.PropertyType", "PropertyType")
                        .WithMany("RentalProperties")
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalsData.Renter", "Renter")
                        .WithOne("RentalProperty")
                        .HasForeignKey("RentalsData.RentalProperty", "RenterId");

                    b.Navigation("Owner");

                    b.Navigation("PropertyType");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("RentalsData.User", b =>
                {
                    b.HasOne("RentalsData.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RentalsData.Owner", b =>
                {
                    b.Navigation("RentalProperties");
                });

            modelBuilder.Entity("RentalsData.PropertyType", b =>
                {
                    b.Navigation("RentalProperties");
                });

            modelBuilder.Entity("RentalsData.Renter", b =>
                {
                    b.Navigation("RentalProperty");
                });
#pragma warning restore 612, 618
        }
    }
}
